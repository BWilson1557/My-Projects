def remove_transposons(dna_sequences):
    # Define the two transposons
    transposon_1 = "AATTGGGATCTTTCTATCAG"
    transposon_2 = "TTAACCCTAGAAAGATAGTC"
    
    # Iterate over each DNA sequence and remove the transposons
    cleaned_sequences = []
    
    for dna in dna_sequences:
        # Remove both transposons if they exist
        dna_cleaned = dna.replace(transposon_1, "").replace(transposon_2, "")
        cleaned_sequences.append(dna_cleaned)
    
    return cleaned_sequences

def main():
    # Input: List of DNA sequences (can be added here directly)
    dna_sequences = [
        "CGCAGACTATCTTTCTAGGGTTAAACTCAACATAGTTATTTTTAGGTTCATCCATGTTGTGTTTAACCCTAGAAAGATAGTCTGCGTAAAATTGACGCATGC",
        "CGCAGACTATCTTTCTAGGGTTAAACTCAACATAGTTATTTTTAGGTTCATCCATGTTGTGTTTAACCCTAGAAAGATAGTCTGCGTAAAATTGACGCATGC",
        "CGCAGACTATCTTTCTAGGGTTAAACTCAACATAGTTATTTTTAGGTTCATCCATGTTGTGTTTAACCCTAGAAAGATAGTCTGCGTAAAATTGACGCATGC",
        "ATGCGTCAATTTTACGCAGACTATCTTTCTAGGGTTAAACCGGTTCAGCAGGAATGCCGAGGATCAGTACACAACCACAACCACTAATGGAAAAGTAAATGCCAAGCTGGCAAGTCAGTCTTCATTTAACCCTAGAAAGATAGTCTGCGTAAAATTGACGCATGC",
        "TTAATTAACCCTAGAAAGATAGTCTGCTCGCCTCTGATCCTCGGCATTCCTGCTGAACCCGAGTTGTTATCAGGCACCGCTCGGCATTCCTGCTGAACCGGCGCCTACGCTAGATATCCTAGAGCATGCGTCAATTTTACGCAGACTATCTTTCTAGGGTTAAACCTCTGGGCGTCTTCCTTTCTGCTGTAAGTCACCATGATATCTGGAGTTTTTCTTTAAGTCATAGCAATGCTGAGAAGCATTTCCC",
        "GGTTCAGCAGGAATGCCGAGACCGGTTTAAACTCAGTGTCCATAGCGACGCCGGCGCGATAAGCGCATGCGTCAATTTTACGCAGACTATCTTTCTAGGGTTAACCCTAGAAAGATAGTCTGCGTAAAATTGACGCATGCACTTTTATCGAATTCCTGCAGCCCAGCTTGATCTTAGGTCCCTCGACGAATTCTCTAGAGAAGAGCATGCGTGAGGCTCCGGTGCCCGTCAGTGGGCAGAGCGCACATCG",
        "TTAACCCTAGAAAGATAGTCTGCGTAAAATTGACGCAGACTATCTTTCTAGGGTTAA",
        "GCAAATACGGATTAACCCTAGAAAGATAGTCTGCGTAAAATTGACGCAGACTATCTTTCTAGGGTTAATCCGTATTTGC",
        "GCATGCGTCAATTTTACGCAGACTATCTTTCTAGGGTTAAGCCCGGGAGGGAGAGGTTAACGTGGGCTGTGATCCTCGGCATTCCTGGGCCTCCCAAAGTGCTGGAAACCACAGGCCTGAGCCGCCGGGATTTCAGCCTTTAACCCTAGAAAGATAGTCTGCGTAAAAT",
        "GCATGCGTCAATTTTAAGCAGACTATCTTTCTAGGGTTAATAGAGAGTGAGCTGATACCATCAAGGAGGATTTCTGCAGTCTCCTTCTTTGGCGAGGGTGTTCAACCAGCAGCCTTTAGGCATGCTCGGCATTCATGCTGAAACGCTATCCCTTTCTTACCCAGTGCTGTGGATCTTAACCCTAGAAAGATAGTCTGAGTAAAATTGAAGCATGCGCTTATCGCGCCGGCGTCGCTATGTACACTGAGTT",
        "CATGCGTCAATTTTACGCAGACTATCTTTCTAGGGTTAAGATATAAGTGGCCAGATGCAGTGGCTCACGCCTGTAATCCCAGTGCTTTGGGAGGCTGAAGGCCAGAGGATCTAAAATCAACACCCTAACATCACAATTAAAAAAAACCATAGCGACGCCGGCGCGATAAGCGCATGCGTCAATTTTACGCAGACTATCTTTCTAGGGTTAACCCTAGAAAGATAGTCTGCGTAAAATTGACGCATGCACT",
        "CATGCGTCAATTTTACGCAGACTATCTTTCTAGGGTTAAGATATAAGTGGCCAGATGCAGTGGCTCACGCCTGTAATCCCAGTGCTTTGGGAGGCTGAAGGCCAGAGGATCTAAAATCAACACCCTAACATCACAATTAAAAAAAACCATAGCGACGCCGGCGCGATAAGCGCATGCGTCAATTTTACGCAGACTATCTTTCTAGGGTTAACCCTAGAAAGATAGTCTGCGTAAAATTGACGCATGCACT"
    ]
    
    # Call function to remove transposons
    cleaned_sequences = remove_transposons(dna_sequences)
    
    # Output the cleaned sequences
    for original, cleaned in zip(dna_sequences, cleaned_sequences):
        print(f"Original: {original}")
        print(f"Cleaned:  {cleaned}")
        print("-" * 50)

if __name__ == "__main__":
    main()
